// Code generated by hertz generator.

package video

import (
	"context"

	video "TikTok-rpc/app/gateway/model/api/video"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// PublishVideo .
// @router /video/publish [POST]
func PublishVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.PublishRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.PublishResponse)

	c.JSON(consts.StatusOK, resp)
}

// QueryList .
// @router /video/list [GET]
func QueryList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.QueryPublishListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.QueryPublishListResponse)

	c.JSON(consts.StatusOK, resp)
}

// SearchVideo .
// @router /video/search [POST]
func SearchVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.SearchVideoByKeywordRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.SearchVideoByKeywordResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetPopularVideo .
// @router /video/popular [GET]
func GetPopularVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.GetPopularListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.GetPopularListResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetVideoStream .
// @router /video/feed [GET]
func GetVideoStream(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.VideoStreamRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.VideoStreamResponse)

	c.JSON(consts.StatusOK, resp)
}
