services:
  # Redis 服务，用于缓存、会话管理等，提供键值存储功能
  tiktok-redis:
    container_name: tiktok-redis
    image: redis:bookworm
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    env_file:
      - "./env/redis.env"
    networks:
      - tiktok

  # MySQL 服务，提供关系型数据库，用于存储结构化数据
  tiktok-mysql:
    container_name: tiktok-mysql
    image: mysql:9.0.1
    env_file:
      - "./env/mysql.env"
    ports:
      - "3306:3306"
    networks:
      - tiktok
    volumes:
      - ../config/sql:/docker-entrypoint-initdb.d
      - ./data/mysql:/var/lib/mysql

  # etcd 服务，分布式键值存储系统，用于服务发现、配置管理
  tiktok-etcd:
    container_name: tiktok-etcd
    image: quay.io/coreos/etcd:v3.5.5
    restart: always
    ports:
      - 2379:2379
      - 2380:2380
    env_file:
      - "./env/etcd.env"
    volumes:
      - ./script:/script
      - ../config:/config
      - ./data/etcd:/etcd-data
    networks:
      - tiktok
    entrypoint: [ "sh", "-c", "chmod +x /script/etcd-monitor.sh && /script/etcd-monitor.sh & exec etcd" ]

  # Kafka 服务，分布式流处理平台，用于构建实时数据管道和流应用
  kafka:
    container_name: tiktok-kafka
    image: bitnami/kafka:latest
    restart: always
    user: root
    ports:
      - "9092:9092"
      - "9093:9093"
    env_file:
      - ./env/kafka.env
    volumes:
      - ./data/kafka:/bitnami/kafka
    networks:
      - tiktok

  # Kafka UI 服务，为 Kafka 提供可视化管理和监控界面
  kafka-ui:
    container_name: tiktok-kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - "9091:8080"
    env_file:
      - ./env/kafka-ui.env
    networks:
      - tiktok

  # RocketMQ NameServer 服务，负责管理 Broker 的元数据
  rmqnamesrv:
    image: apache/rocketmq:4.9.6
    container_name: tiktok-rmqnamesrv
    ports:
      - "9876:9876"
    volumes:
      - ./data/rocketmq/namesrv/logs:/opt/logs
      - ./data/rocketmq/namesrv/store:/opt/store
    command: sh mqnamesrv
    networks:
      tiktok:
        aliases:
          - rmqnamesrv
    mem_limit: 250m

  # RocketMQ Broker 服务，负责消息的存储、转发等核心功能
  rmqbroker:
    image: apache/rocketmq:4.9.6
    container_name: tiktok-rmqbroker
    ports:
      - "10909:10909"
      - "10911:10911"
    volumes:
      - ./data/rocketmq/broker/logs:/opt/logs
      - ./data/rocketmq/broker/store:/opt/store
      - ../config/rocketmq/broker.conf:/home/rocketmq/broker.conf
      - ../config/rocketmq/plain_acl.yml:/home/rocketmq/rocketmq-4.9.6/conf/plain_acl.yml
    env_file:
      - ./env/rocket-broker.env
    command: sh mqbroker -c /home/rocketmq/rocketmq-4.9.6/conf/broker.conf
    depends_on:
      - rmqnamesrv
    networks:
      tiktok:
        aliases:
          - rmqbroker
    mem_limit: 750m

  # OpenTelemetry 收集器，收集、处理和导出可观测性数据（指标、追踪等）
  tiktok-otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    container_name: tiktok-otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
    volumes:
      - ../config/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679" # zpages extension
    depends_on:
      - tiktok-jaeger
    networks:
      - tiktok

  # Jaeger 服务，分布式追踪系统，用于监控和排查微服务性能问题
  tiktok-jaeger:
    container_name: tiktok-jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "6831:6831"
      - "4317"
    networks:
      - tiktok

  # VictoriaMetrics 服务，时间序列数据库，存储和查询大规模时间序列数据
  tiktok-victoriametrics:
    container_name: tiktok-victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428" # 映射 HTTP 服务端口，用于通过 HTTP 协议进行数据查询、管理接口访问等操作
      - "8089:8089" # 映射 InfluxDB 协议监听端口，支持使用 InfluxDB 协议向 VictoriaMetrics 写入数据
      - "8089:8089/udp" # 映射 InfluxDB 协议 UDP 监听端口，支持使用 UDP 方式通过 InfluxDB 协议写入数据
      - "2003:2003" # 映射 Graphite 协议监听端口，支持使用 Graphite 协议向 VictoriaMetrics 写入数据
      - "2003:2003/udp" # 映射 Graphite 协议 UDP 监听端口，支持使用 UDP 方式通过 Graphite 协议写入数据
      - "4242:4242" # 映射 OpenTSDB 协议监听端口，支持使用 OpenTSDB 协议向 VictoriaMetrics 写入数据
    command:
      - '--storageDataPath=/storage' # 指定 VictoriaMetrics 存储数据的路径为容器内的 /storage 目录
      - '--graphiteListenAddr=:2003' # 设置 Graphite 协议的监听地址为 2003 端口，用于接收 Graphite 格式的指标数据
      - '--opentsdbListenAddr=:4242' # 设置 OpenTSDB 协议的监听地址为 4242 端口，用于接收 OpenTSDB 格式的指标数据
      - '--httpListenAddr=:8428' # 设置 HTTP 服务的监听地址为 8428 端口，可通过该端口进行数据查询、管理操作等
      - '--influxListenAddr=:8089' # 设置 InfluxDB 协议的监听地址为 8089 端口，用于接收 InfluxDB 格式的指标数据
    restart: always
    networks:
      - tiktok

  # Prometheus 服务，系统监控和警报工具，收集和存储指标数据
  tiktok-prometheus:
    image: prom/prometheus
    container_name: tiktok-prometheus
    hostname: prometheus
    volumes:
      - ../config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../config/prometheus/mysqld_rules.yml:/etc/prometheus/mysqld_rules.yml
      - ../config/prometheus/redis_rules.yml:/etc/prometheus/redis_rules.yml
    ports:
      - "9090:9090"
    depends_on:
      - tiktok-otel-collector
    networks:
      - tiktok

  # Node Exporter 服务，收集主机系统级指标（CPU、内存等）供 Prometheus 采集
  tiktok-node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: tiktok-node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - tiktok

  # cAdvisor 服务，收集容器资源使用和性能指标（CPU、内存等）
  tiktok-cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: tiktok-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080"
    networks:
      - tiktok

  # Redis Exporter 服务，收集 Redis 实例指标数据供 Prometheus 采集
  tiktok-redis-exporter:
    image: oliver006/redis_exporter
    container_name: tiktok-redis-exporter
    ports:
      - "9121:9121"
    command:
      - "--redis.addr=redis://tiktok-redis:6379"
    networks:
      - tiktok

  # MySQL Exporter 服务，收集 MySQL 数据库指标数据供 Prometheus 采集
  tiktok-mysql-exporter:
    image: prom/mysqld-exporter
    container_name: tiktok-mysql-exporter
    ports:
      - "9104:9104"
    command:
      - "--mysqld.username=tiktok:tiktok"
      - "--mysqld.address=tiktok-mysql:3306"
    environment:
      DATA_SOURCE_NAME: 'tiktok:tiktok@(tiktok-mysql:3306)/'
    networks:
      - tiktok
    depends_on:
      - tiktok-mysql

  # Grafana 服务，可视化和分析平台，展示 Prometheus 等数据源的指标数据
  tiktok-grafana:
    container_name: tiktok-grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=tiktok
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_PASSWORD_HINT=true
    ports:
      - "3000:3000"
    networks:
      - tiktok

networks:
  tiktok:
    driver: bridge
    name: tiktok
